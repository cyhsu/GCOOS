 
 
 
Wed Apr 17 12:00:00 CDT 2019
convert online data to nc
convert nc data to ascii
Wed Apr 17 12:00:02 CDT 2019
 
 
 
Wed Apr 17 14:00:00 CDT 2019
convert online data to nc
convert nc data to ascii
Wed Apr 17 14:00:02 CDT 2019
 
 
 
Wed Apr 17 16:00:00 CDT 2019
convert online data to nc
convert nc data to ascii
Wed Apr 17 16:00:02 CDT 2019
 
 
 
Wed Apr 17 17:21:00 CDT 2019
convert online data to nc
convert nc data to ascii
Wed Apr 17 17:21:02 CDT 2019
 
 
 
Wed Apr 17 17:25:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mgaierror[0m                                  Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    158[0m             conn = connection.create_connection(
[0;32m--> 159[0;31m                 (self._dns_host, self.port), self.timeout, **extra_kw)
[0m[1;32m    160[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/connection.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[1;32m     56[0m [0;34m[0m[0m
[0;32m---> 57[0;31m     [0;32mfor[0m [0mres[0m [0;32min[0m [0msocket[0m[0;34m.[0m[0mgetaddrinfo[0m[0;34m([0m[0mhost[0m[0;34m,[0m [0mport[0m[0;34m,[0m [0mfamily[0m[0;34m,[0m [0msocket[0m[0;34m.[0m[0mSOCK_STREAM[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     58[0m         [0maf[0m[0;34m,[0m [0msocktype[0m[0;34m,[0m [0mproto[0m[0;34m,[0m [0mcanonname[0m[0;34m,[0m [0msa[0m [0;34m=[0m [0mres[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/socket.py[0m in [0;36mgetaddrinfo[0;34m(host, port, family, type, proto, flags)[0m
[1;32m    744[0m     [0maddrlist[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 745[0;31m     [0;32mfor[0m [0mres[0m [0;32min[0m [0m_socket[0m[0;34m.[0m[0mgetaddrinfo[0m[0;34m([0m[0mhost[0m[0;34m,[0m [0mport[0m[0;34m,[0m [0mfamily[0m[0;34m,[0m [0mtype[0m[0;34m,[0m [0mproto[0m[0;34m,[0m [0mflags[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    746[0m         [0maf[0m[0;34m,[0m [0msocktype[0m[0;34m,[0m [0mproto[0m[0;34m,[0m [0mcanonname[0m[0;34m,[0m [0msa[0m [0;34m=[0m [0mres[0m[0;34m[0m[0;34m[0m[0m

[0;31mgaierror[0m: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

[0;31mNewConnectionError[0m                        Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    599[0m                                                   [0mbody[0m[0;34m=[0m[0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m=[0m[0mheaders[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 600[0;31m                                                   chunked=chunked)
[0m[1;32m    601[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36m_make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    353[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 354[0;31m             [0mconn[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0;34m**[0m[0mhttplib_request_kw[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    355[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mrequest[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1238[0m         [0;34m"""Send a complete request to the server."""[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1239[0;31m         [0mself[0m[0;34m.[0m[0m_send_request[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m,[0m [0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1240[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_request[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1284[0m             [0mbody[0m [0;34m=[0m [0m_encode[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0;34m'body'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1285[0;31m         [0mself[0m[0;34m.[0m[0mendheaders[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1286[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mendheaders[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1233[0m             [0;32mraise[0m [0mCannotSendHeader[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1234[0;31m         [0mself[0m[0;34m.[0m[0m_send_output[0m[0;34m([0m[0mmessage_body[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1235[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_output[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1025[0m         [0;32mdel[0m [0mself[0m[0;34m.[0m[0m_buffer[0m[0;34m[[0m[0;34m:[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1026[0;31m         [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mmsg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1027[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36msend[0;34m(self, data)[0m
[1;32m    963[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0mauto_open[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 964[0;31m                 [0mself[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    965[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36mconnect[0;34m(self)[0m
[1;32m    180[0m     [0;32mdef[0m [0mconnect[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 181[0;31m         [0mconn[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_new_conn[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    182[0m         [0mself[0m[0;34m.[0m[0m_prepare_conn[0m[0;34m([0m[0mconn[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    167[0m             raise NewConnectionError(
[0;32m--> 168[0;31m                 self, "Failed to establish a new connection: %s" % e)
[0m[1;32m    169[0m [0;34m[0m[0m

[0;31mNewConnectionError[0m: <urllib3.connection.HTTPConnection object at 0x124d35940>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

[0;31mMaxRetryError[0m                             Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    448[0m                     [0mretries[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mmax_retries[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 449[0;31m                     [0mtimeout[0m[0;34m=[0m[0mtimeout[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    450[0m                 )

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    637[0m             retries = retries.increment(method, url, error=e, _pool=self,
[0;32m--> 638[0;31m                                         _stacktrace=sys.exc_info()[2])
[0m[1;32m    639[0m             [0mretries[0m[0;34m.[0m[0msleep[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/retry.py[0m in [0;36mincrement[0;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[1;32m    397[0m         [0;32mif[0m [0mnew_retry[0m[0;34m.[0m[0mis_exhausted[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 398[0;31m             [0;32mraise[0m [0mMaxRetryError[0m[0;34m([0m[0m_pool[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0merror[0m [0;32mor[0m [0mResponseError[0m[0;34m([0m[0mcause[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    399[0m [0;34m[0m[0m

[0;31mMaxRetryError[0m: HTTPConnectionPool(host='waterdata.usgs.gov', port=80): Max retries exceeded with url: /nwis/dv?cb_00060=on&format=rdb&begin_date=2019-02-16&end_date=2019-04-17&site_no=02292010&referred_module=sw (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x124d35940>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known',))

During handling of the above exception, another exception occurred:

[0;31mConnectionError[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/models/subs.py[0m in [0;36mwith_exception[0;34m(fid, payload)[0m
[1;32m     14[0m                 [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 15[0;31m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     16[0m                         [0;32mreturn[0m [0;36m1[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mpost[0;34m(url, data, json, **kwargs)[0m
[1;32m    115[0m [0;34m[0m[0m
[0;32m--> 116[0;31m     [0;32mreturn[0m [0mrequest[0m[0;34m([0m[0;34m'post'[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m [0mjson[0m[0;34m=[0m[0mjson[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    117[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     59[0m     [0;32mwith[0m [0msessions[0m[0;34m.[0m[0mSession[0m[0;34m([0m[0;34m)[0m [0;32mas[0m [0msession[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 60[0;31m         [0;32mreturn[0m [0msession[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m=[0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m=[0m[0murl[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     61[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36mrequest[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    532[0m         [0msend_kwargs[0m[0;34m.[0m[0mupdate[0m[0;34m([0m[0msettings[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 533[0;31m         [0mresp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mprep[0m[0;34m,[0m [0;34m**[0m[0msend_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    534[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36msend[0;34m(self, request, **kwargs)[0m
[1;32m    645[0m         [0;31m# Send the request[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 646[0;31m         [0mr[0m [0;34m=[0m [0madapter[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mrequest[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    647[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    515[0m [0;34m[0m[0m
[0;32m--> 516[0;31m             [0;32mraise[0m [0mConnectionError[0m[0;34m([0m[0me[0m[0;34m,[0m [0mrequest[0m[0;34m=[0m[0mrequest[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    517[0m [0;34m[0m[0m

[0;31mConnectionError[0m: HTTPConnectionPool(host='waterdata.usgs.gov', port=80): Max retries exceeded with url: /nwis/dv?cb_00060=on&format=rdb&begin_date=2019-02-16&end_date=2019-04-17&site_no=02292010&referred_module=sw (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x124d35940>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known',))

During handling of the above exception, another exception occurred:

[0;31mUnboundLocalError[0m                         Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     25[0m         [0;32mdef[0m [0mbs4[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     26[0m                 [0mfid[0m[0;34m,[0m [0mpayload[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mpayload[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 27[0;31m                 [0mself[0m[0;34m.[0m[0mncout[0m [0;34m=[0m [0msubs[0m[0;34m.[0m[0mwith_exception[0m[0;34m([0m[0mfid[0m[0;34m,[0m[0mpayload[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     28[0m                 [0modata[0m[0;34m,[0m [0modate[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m,[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/subs.py[0m in [0;36mwith_exception[0;34m(fid, payload)[0m
[1;32m     19[0m                         [0;32mreturn[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m     20[0m                 [0;32mexcept[0m [0mrequests[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mConnectionError[0m [0;32mas[0m [0merrc[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 21[0;31m                         [0mprint[0m[0;34m([0m [0;34m' Error (Connecting): {}'[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0merrt[0m[0;34m)[0m [0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     22[0m                         [0;32mreturn[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m     23[0m                 [0;32mexcept[0m [0mrequests[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mHTTPError[0m [0;32mas[0m [0merrh[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mUnboundLocalError[0m: local variable 'errt' referenced before assignment
convert nc data to ascii
Wed Apr 17 17:25:55 CDT 2019
 
 
 
Thu Apr 18 10:18:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu Apr 18 10:21:05 CDT 2019
 
 
 
Thu Apr 18 10:24:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu Apr 18 10:26:05 CDT 2019
 
 
 
Thu Apr 18 10:28:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu Apr 18 10:30:22 CDT 2019
 
 
 
Thu Apr 18 10:32:03 CDT 2019
convert online data to nc
convert nc data to ascii
Thu Apr 18 10:32:18 CDT 2019
 
 
 
Fri Apr 19 10:32:02 CDT 2019
convert online data to nc
convert nc data to ascii
Fri Apr 19 11:56:49 CDT 2019
 
 
 
Sat Apr 20 10:32:03 CDT 2019
convert online data to nc
convert nc data to ascii
Sat Apr 20 11:46:05 CDT 2019
 
 
 
Sun Apr 21 10:32:03 CDT 2019
convert online data to nc
convert nc data to ascii
Sun Apr 21 11:46:45 CDT 2019
 
 
 
Mon Apr 22 10:32:03 CDT 2019
convert online data to nc
convert nc data to ascii
Mon Apr 22 11:47:27 CDT 2019
 
 
 
Tue Apr 23 10:32:03 CDT 2019
convert online data to nc
convert nc data to ascii
Tue Apr 23 11:46:43 CDT 2019
 
 
 
Wed Apr 24 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
 
 
 
Thu Apr 25 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu Apr 25 11:48:54 CDT 2019
 
 
 
Fri Apr 26 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Fri Apr 26 11:57:34 CDT 2019
 
 
 
Sat Apr 27 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
 
 
 
Sun Apr 28 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sun Apr 28 11:56:15 CDT 2019
 
 
 
Mon Apr 29 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Mon Apr 29 11:55:23 CDT 2019
 
 
 
Tue Apr 30 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
 
 
 
Wed May  1 10:32:06 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
 
 
 
Thu May  2 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
[0;31m---------------------------------------------------------------------------[0m
[0;31mgaierror[0m                                  Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    158[0m             conn = connection.create_connection(
[0;32m--> 159[0;31m                 (self._dns_host, self.port), self.timeout, **extra_kw)
[0m[1;32m    160[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/connection.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[1;32m     56[0m [0;34m[0m[0m
[0;32m---> 57[0;31m     [0;32mfor[0m [0mres[0m [0;32min[0m [0msocket[0m[0;34m.[0m[0mgetaddrinfo[0m[0;34m([0m[0mhost[0m[0;34m,[0m [0mport[0m[0;34m,[0m [0mfamily[0m[0;34m,[0m [0msocket[0m[0;34m.[0m[0mSOCK_STREAM[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     58[0m         [0maf[0m[0;34m,[0m [0msocktype[0m[0;34m,[0m [0mproto[0m[0;34m,[0m [0mcanonname[0m[0;34m,[0m [0msa[0m [0;34m=[0m [0mres[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/socket.py[0m in [0;36mgetaddrinfo[0;34m(host, port, family, type, proto, flags)[0m
[1;32m    744[0m     [0maddrlist[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 745[0;31m     [0;32mfor[0m [0mres[0m [0;32min[0m [0m_socket[0m[0;34m.[0m[0mgetaddrinfo[0m[0;34m([0m[0mhost[0m[0;34m,[0m [0mport[0m[0;34m,[0m [0mfamily[0m[0;34m,[0m [0mtype[0m[0;34m,[0m [0mproto[0m[0;34m,[0m [0mflags[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    746[0m         [0maf[0m[0;34m,[0m [0msocktype[0m[0;34m,[0m [0mproto[0m[0;34m,[0m [0mcanonname[0m[0;34m,[0m [0msa[0m [0;34m=[0m [0mres[0m[0;34m[0m[0;34m[0m[0m

[0;31mgaierror[0m: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

[0;31mNewConnectionError[0m                        Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    599[0m                                                   [0mbody[0m[0;34m=[0m[0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m=[0m[0mheaders[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 600[0;31m                                                   chunked=chunked)
[0m[1;32m    601[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36m_make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    353[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 354[0;31m             [0mconn[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0;34m**[0m[0mhttplib_request_kw[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    355[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mrequest[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1238[0m         [0;34m"""Send a complete request to the server."""[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1239[0;31m         [0mself[0m[0;34m.[0m[0m_send_request[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m,[0m [0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1240[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_request[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1284[0m             [0mbody[0m [0;34m=[0m [0m_encode[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0;34m'body'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1285[0;31m         [0mself[0m[0;34m.[0m[0mendheaders[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1286[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mendheaders[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1233[0m             [0;32mraise[0m [0mCannotSendHeader[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1234[0;31m         [0mself[0m[0;34m.[0m[0m_send_output[0m[0;34m([0m[0mmessage_body[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1235[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_output[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1025[0m         [0;32mdel[0m [0mself[0m[0;34m.[0m[0m_buffer[0m[0;34m[[0m[0;34m:[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1026[0;31m         [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mmsg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1027[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36msend[0;34m(self, data)[0m
[1;32m    963[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0mauto_open[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 964[0;31m                 [0mself[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    965[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36mconnect[0;34m(self)[0m
[1;32m    180[0m     [0;32mdef[0m [0mconnect[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 181[0;31m         [0mconn[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_new_conn[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    182[0m         [0mself[0m[0;34m.[0m[0m_prepare_conn[0m[0;34m([0m[0mconn[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    167[0m             raise NewConnectionError(
[0;32m--> 168[0;31m                 self, "Failed to establish a new connection: %s" % e)
[0m[1;32m    169[0m [0;34m[0m[0m

[0;31mNewConnectionError[0m: <urllib3.connection.HTTPConnection object at 0x118b85d68>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

[0;31mMaxRetryError[0m                             Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    448[0m                     [0mretries[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mmax_retries[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 449[0;31m                     [0mtimeout[0m[0;34m=[0m[0mtimeout[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    450[0m                 )

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    637[0m             retries = retries.increment(method, url, error=e, _pool=self,
[0;32m--> 638[0;31m                                         _stacktrace=sys.exc_info()[2])
[0m[1;32m    639[0m             [0mretries[0m[0;34m.[0m[0msleep[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/retry.py[0m in [0;36mincrement[0;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[1;32m    397[0m         [0;32mif[0m [0mnew_retry[0m[0;34m.[0m[0mis_exhausted[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 398[0;31m             [0;32mraise[0m [0mMaxRetryError[0m[0;34m([0m[0m_pool[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0merror[0m [0;32mor[0m [0mResponseError[0m[0;34m([0m[0mcause[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    399[0m [0;34m[0m[0m

[0;31mMaxRetryError[0m: HTTPConnectionPool(host='waterdata.usgs.gov', port=80): Max retries exceeded with url: /nwis/dv?cb_00060=on&format=rdb&begin_date=2019-03-03&end_date=2019-05-02&site_no=08068090&referred_module=sw (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x118b85d68>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known',))

During handling of the above exception, another exception occurred:

[0;31mConnectionError[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/models/subs.py[0m in [0;36mwith_exception[0;34m(fid, payload)[0m
[1;32m     14[0m                 [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 15[0;31m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     16[0m                         [0;32mreturn[0m [0;36m1[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mpost[0;34m(url, data, json, **kwargs)[0m
[1;32m    115[0m [0;34m[0m[0m
[0;32m--> 116[0;31m     [0;32mreturn[0m [0mrequest[0m[0;34m([0m[0;34m'post'[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m [0mjson[0m[0;34m=[0m[0mjson[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    117[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     59[0m     [0;32mwith[0m [0msessions[0m[0;34m.[0m[0mSession[0m[0;34m([0m[0;34m)[0m [0;32mas[0m [0msession[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 60[0;31m         [0;32mreturn[0m [0msession[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m=[0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m=[0m[0murl[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     61[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36mrequest[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    532[0m         [0msend_kwargs[0m[0;34m.[0m[0mupdate[0m[0;34m([0m[0msettings[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 533[0;31m         [0mresp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mprep[0m[0;34m,[0m [0;34m**[0m[0msend_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    534[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36msend[0;34m(self, request, **kwargs)[0m
[1;32m    645[0m         [0;31m# Send the request[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 646[0;31m         [0mr[0m [0;34m=[0m [0madapter[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mrequest[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    647[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    515[0m [0;34m[0m[0m
[0;32m--> 516[0;31m             [0;32mraise[0m [0mConnectionError[0m[0;34m([0m[0me[0m[0;34m,[0m [0mrequest[0m[0;34m=[0m[0mrequest[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    517[0m [0;34m[0m[0m

[0;31mConnectionError[0m: HTTPConnectionPool(host='waterdata.usgs.gov', port=80): Max retries exceeded with url: /nwis/dv?cb_00060=on&format=rdb&begin_date=2019-03-03&end_date=2019-05-02&site_no=08068090&referred_module=sw (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x118b85d68>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known',))

During handling of the above exception, another exception occurred:

[0;31mUnboundLocalError[0m                         Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     25[0m         [0;32mdef[0m [0mbs4[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     26[0m                 [0mfid[0m[0;34m,[0m [0mpayload[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mpayload[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 27[0;31m                 [0mself[0m[0;34m.[0m[0mncout[0m [0;34m=[0m [0msubs[0m[0;34m.[0m[0mwith_exception[0m[0;34m([0m[0mfid[0m[0;34m,[0m[0mpayload[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     28[0m                 [0modata[0m[0;34m,[0m [0modate[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m,[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/subs.py[0m in [0;36mwith_exception[0;34m(fid, payload)[0m
[1;32m     19[0m                         [0;32mreturn[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m     20[0m                 [0;32mexcept[0m [0mrequests[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mConnectionError[0m [0;32mas[0m [0merrc[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 21[0;31m                         [0mprint[0m[0;34m([0m [0;34m' Error (Connecting): {}'[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0merrt[0m[0;34m)[0m [0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     22[0m                         [0;32mreturn[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m     23[0m                 [0;32mexcept[0m [0mrequests[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mHTTPError[0m [0;32mas[0m [0merrh[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mUnboundLocalError[0m: local variable 'errt' referenced before assignment
convert nc data to ascii
 
 
 
Fri May  3 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
 
 
 
Sat May  4 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sat May  4 11:52:07 CDT 2019
 
 
 
Sun May  5 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sun May  5 11:47:46 CDT 2019
 
 
 
Mon May  6 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Mon May  6 11:50:57 CDT 2019
 
 
 
Tue May  7 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Tue May  7 10:35:02 CDT 2019
 
 
 
Wed May  8 10:32:06 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Wed May  8 10:35:18 CDT 2019
 
 
 
Thu May  9 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu May  9 10:35:40 CDT 2019
 
 
 
Fri May 10 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Fri May 10 10:35:11 CDT 2019
 
 
 
Sat May 11 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sat May 11 10:35:05 CDT 2019
 
 
 
Sun May 12 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sun May 12 10:34:58 CDT 2019
 
 
 
Mon May 13 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Mon May 13 10:35:09 CDT 2019
 
 
 
Tue May 14 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Tue May 14 10:35:03 CDT 2019
 
 
 
Wed May 15 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Wed May 15 10:35:15 CDT 2019
 
 
 
Thu May 16 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu May 16 10:35:15 CDT 2019
 
 
 
Fri May 17 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Fri May 17 10:35:10 CDT 2019
 
 
 
Sat May 18 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sat May 18 10:34:58 CDT 2019
 
 
 
Sun May 19 10:32:06 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sun May 19 10:35:03 CDT 2019
 
 
 
Mon May 20 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Mon May 20 10:35:06 CDT 2019
 
 
 
Tue May 21 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Tue May 21 10:41:22 CDT 2019
 
 
 
Wed May 22 10:32:06 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Wed May 22 10:35:11 CDT 2019
 
 
 
Thu May 23 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu May 23 10:35:04 CDT 2019
 
 
 
Fri May 24 10:32:06 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Fri May 24 10:35:06 CDT 2019
 
 
 
Sat May 25 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sat May 25 10:34:59 CDT 2019
 
 
 
Sun May 26 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sun May 26 10:35:09 CDT 2019
 
 
 
Mon May 27 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
[0;31m---------------------------------------------------------------------------[0m
[0;31mConnectionRefusedError[0m                    Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    158[0m             conn = connection.create_connection(
[0;32m--> 159[0;31m                 (self._dns_host, self.port), self.timeout, **extra_kw)
[0m[1;32m    160[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/connection.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[1;32m     79[0m     [0;32mif[0m [0merr[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 80[0;31m         [0;32mraise[0m [0merr[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     81[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/connection.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[1;32m     69[0m                 [0msock[0m[0;34m.[0m[0mbind[0m[0;34m([0m[0msource_address[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 70[0;31m             [0msock[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0msa[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     71[0m             [0;32mreturn[0m [0msock[0m[0;34m[0m[0;34m[0m[0m

[0;31mConnectionRefusedError[0m: [Errno 61] Connection refused

During handling of the above exception, another exception occurred:

[0;31mNewConnectionError[0m                        Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    599[0m                                                   [0mbody[0m[0;34m=[0m[0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m=[0m[0mheaders[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 600[0;31m                                                   chunked=chunked)
[0m[1;32m    601[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36m_make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    353[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 354[0;31m             [0mconn[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0;34m**[0m[0mhttplib_request_kw[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    355[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mrequest[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1238[0m         [0;34m"""Send a complete request to the server."""[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1239[0;31m         [0mself[0m[0;34m.[0m[0m_send_request[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m,[0m [0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1240[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_request[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1284[0m             [0mbody[0m [0;34m=[0m [0m_encode[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0;34m'body'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1285[0;31m         [0mself[0m[0;34m.[0m[0mendheaders[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1286[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mendheaders[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1233[0m             [0;32mraise[0m [0mCannotSendHeader[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1234[0;31m         [0mself[0m[0;34m.[0m[0m_send_output[0m[0;34m([0m[0mmessage_body[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1235[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_output[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1025[0m         [0;32mdel[0m [0mself[0m[0;34m.[0m[0m_buffer[0m[0;34m[[0m[0;34m:[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1026[0;31m         [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mmsg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1027[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36msend[0;34m(self, data)[0m
[1;32m    963[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0mauto_open[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 964[0;31m                 [0mself[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    965[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36mconnect[0;34m(self)[0m
[1;32m    180[0m     [0;32mdef[0m [0mconnect[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 181[0;31m         [0mconn[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_new_conn[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    182[0m         [0mself[0m[0;34m.[0m[0m_prepare_conn[0m[0;34m([0m[0mconn[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    167[0m             raise NewConnectionError(
[0;32m--> 168[0;31m                 self, "Failed to establish a new connection: %s" % e)
[0m[1;32m    169[0m [0;34m[0m[0m

[0;31mNewConnectionError[0m: <urllib3.connection.HTTPConnection object at 0x11e4cf860>: Failed to establish a new connection: [Errno 61] Connection refused

During handling of the above exception, another exception occurred:

[0;31mMaxRetryError[0m                             Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    448[0m                     [0mretries[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mmax_retries[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 449[0;31m                     [0mtimeout[0m[0;34m=[0m[0mtimeout[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    450[0m                 )

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    637[0m             retries = retries.increment(method, url, error=e, _pool=self,
[0;32m--> 638[0;31m                                         _stacktrace=sys.exc_info()[2])
[0m[1;32m    639[0m             [0mretries[0m[0;34m.[0m[0msleep[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/retry.py[0m in [0;36mincrement[0;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[1;32m    397[0m         [0;32mif[0m [0mnew_retry[0m[0;34m.[0m[0mis_exhausted[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 398[0;31m             [0;32mraise[0m [0mMaxRetryError[0m[0;34m([0m[0m_pool[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0merror[0m [0;32mor[0m [0mResponseError[0m[0;34m([0m[0mcause[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    399[0m [0;34m[0m[0m

[0;31mMaxRetryError[0m: HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Max retries exceeded with url: /WaterControl/shefgraph-historic.cfm?sid=01100Q (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x11e4cf860>: Failed to establish a new connection: [Errno 61] Connection refused',))

During handling of the above exception, another exception occurred:

[0;31mConnectionError[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/models/subs.py[0m in [0;36mwith_exception[0;34m(fid, payload)[0m
[1;32m     14[0m                 [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 15[0;31m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     16[0m                         [0;32mreturn[0m [0;36m1[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mpost[0;34m(url, data, json, **kwargs)[0m
[1;32m    115[0m [0;34m[0m[0m
[0;32m--> 116[0;31m     [0;32mreturn[0m [0mrequest[0m[0;34m([0m[0;34m'post'[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m [0mjson[0m[0;34m=[0m[0mjson[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    117[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     59[0m     [0;32mwith[0m [0msessions[0m[0;34m.[0m[0mSession[0m[0;34m([0m[0;34m)[0m [0;32mas[0m [0msession[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 60[0;31m         [0;32mreturn[0m [0msession[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m=[0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m=[0m[0murl[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     61[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36mrequest[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    532[0m         [0msend_kwargs[0m[0;34m.[0m[0mupdate[0m[0;34m([0m[0msettings[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 533[0;31m         [0mresp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mprep[0m[0;34m,[0m [0;34m**[0m[0msend_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    534[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36msend[0;34m(self, request, **kwargs)[0m
[1;32m    645[0m         [0;31m# Send the request[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 646[0;31m         [0mr[0m [0;34m=[0m [0madapter[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mrequest[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    647[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    515[0m [0;34m[0m[0m
[0;32m--> 516[0;31m             [0;32mraise[0m [0mConnectionError[0m[0;34m([0m[0me[0m[0;34m,[0m [0mrequest[0m[0;34m=[0m[0mrequest[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    517[0m [0;34m[0m[0m

[0;31mConnectionError[0m: HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Max retries exceeded with url: /WaterControl/shefgraph-historic.cfm?sid=01100Q (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x11e4cf860>: Failed to establish a new connection: [Errno 61] Connection refused',))

During handling of the above exception, another exception occurred:

[0;31mUnboundLocalError[0m                         Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     27[0m         [0;32mif[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'01100'[0m [0;32mor[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'03045'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     28[0m                 [0mriver[0m [0;34m=[0m [0musace[0m[0;34m([0m[0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 29[0;31m                 [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     30[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     31[0m                 [0;32mif[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'FL252'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usace.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     23[0m         [0;32mdef[0m [0mbs4[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     24[0m                 [0mfid[0m[0;34m,[0m [0mpayload[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mpayload[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 25[0;31m                 [0mself[0m[0;34m.[0m[0mncout[0m [0;34m=[0m [0msubs[0m[0;34m.[0m[0mwith_exception[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mpayload[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     26[0m                 [0modata[0m[0;34m,[0m [0modate[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m,[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m     27[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/subs.py[0m in [0;36mwith_exception[0;34m(fid, payload)[0m
[1;32m     19[0m                         [0;32mreturn[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m     20[0m                 [0;32mexcept[0m [0mrequests[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mConnectionError[0m [0;32mas[0m [0merrc[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 21[0;31m                         [0mprint[0m[0;34m([0m [0;34m' Error (Connecting): {}'[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0merrt[0m[0;34m)[0m [0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     22[0m                         [0;32mreturn[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m     23[0m                 [0;32mexcept[0m [0mrequests[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mHTTPError[0m [0;32mas[0m [0merrh[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mUnboundLocalError[0m: local variable 'errt' referenced before assignment
convert nc data to ascii
Mon May 27 10:32:59 CDT 2019
 
 
 
Tue May 28 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Tue May 28 10:35:11 CDT 2019
 
 
 
Wed May 29 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Wed May 29 10:35:14 CDT 2019
 
 
 
Thu May 30 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu May 30 10:35:09 CDT 2019
 
 
 
Fri May 31 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Fri May 31 10:35:10 CDT 2019
 
 
 
Sat Jun  1 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
[0;31m---------------------------------------------------------------------------[0m
[0;31mConnectionRefusedError[0m                    Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    158[0m             conn = connection.create_connection(
[0;32m--> 159[0;31m                 (self._dns_host, self.port), self.timeout, **extra_kw)
[0m[1;32m    160[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/connection.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[1;32m     79[0m     [0;32mif[0m [0merr[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 80[0;31m         [0;32mraise[0m [0merr[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     81[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/connection.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[1;32m     69[0m                 [0msock[0m[0;34m.[0m[0mbind[0m[0;34m([0m[0msource_address[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 70[0;31m             [0msock[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0msa[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     71[0m             [0;32mreturn[0m [0msock[0m[0;34m[0m[0;34m[0m[0m

[0;31mConnectionRefusedError[0m: [Errno 61] Connection refused

During handling of the above exception, another exception occurred:

[0;31mNewConnectionError[0m                        Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    599[0m                                                   [0mbody[0m[0;34m=[0m[0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m=[0m[0mheaders[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 600[0;31m                                                   chunked=chunked)
[0m[1;32m    601[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36m_make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    353[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 354[0;31m             [0mconn[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0;34m**[0m[0mhttplib_request_kw[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    355[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mrequest[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1238[0m         [0;34m"""Send a complete request to the server."""[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1239[0;31m         [0mself[0m[0;34m.[0m[0m_send_request[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m,[0m [0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1240[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_request[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1284[0m             [0mbody[0m [0;34m=[0m [0m_encode[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0;34m'body'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1285[0;31m         [0mself[0m[0;34m.[0m[0mendheaders[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1286[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mendheaders[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1233[0m             [0;32mraise[0m [0mCannotSendHeader[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1234[0;31m         [0mself[0m[0;34m.[0m[0m_send_output[0m[0;34m([0m[0mmessage_body[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1235[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_output[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1025[0m         [0;32mdel[0m [0mself[0m[0;34m.[0m[0m_buffer[0m[0;34m[[0m[0;34m:[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1026[0;31m         [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mmsg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1027[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36msend[0;34m(self, data)[0m
[1;32m    963[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0mauto_open[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 964[0;31m                 [0mself[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    965[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36mconnect[0;34m(self)[0m
[1;32m    180[0m     [0;32mdef[0m [0mconnect[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 181[0;31m         [0mconn[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_new_conn[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    182[0m         [0mself[0m[0;34m.[0m[0m_prepare_conn[0m[0;34m([0m[0mconn[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    167[0m             raise NewConnectionError(
[0;32m--> 168[0;31m                 self, "Failed to establish a new connection: %s" % e)
[0m[1;32m    169[0m [0;34m[0m[0m

[0;31mNewConnectionError[0m: <urllib3.connection.HTTPConnection object at 0x124af3860>: Failed to establish a new connection: [Errno 61] Connection refused

During handling of the above exception, another exception occurred:

[0;31mMaxRetryError[0m                             Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    448[0m                     [0mretries[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mmax_retries[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 449[0;31m                     [0mtimeout[0m[0;34m=[0m[0mtimeout[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    450[0m                 )

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    637[0m             retries = retries.increment(method, url, error=e, _pool=self,
[0;32m--> 638[0;31m                                         _stacktrace=sys.exc_info()[2])
[0m[1;32m    639[0m             [0mretries[0m[0;34m.[0m[0msleep[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/retry.py[0m in [0;36mincrement[0;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[1;32m    397[0m         [0;32mif[0m [0mnew_retry[0m[0;34m.[0m[0mis_exhausted[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 398[0;31m             [0;32mraise[0m [0mMaxRetryError[0m[0;34m([0m[0m_pool[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0merror[0m [0;32mor[0m [0mResponseError[0m[0;34m([0m[0mcause[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    399[0m [0;34m[0m[0m

[0;31mMaxRetryError[0m: HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Max retries exceeded with url: /WaterControl/shefgraph-historic.cfm?sid=01100Q (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x124af3860>: Failed to establish a new connection: [Errno 61] Connection refused',))

During handling of the above exception, another exception occurred:

[0;31mConnectionError[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/models/subs.py[0m in [0;36mwith_exception[0;34m(fid, payload)[0m
[1;32m     14[0m                 [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 15[0;31m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     16[0m                         [0;32mreturn[0m [0;36m1[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mpost[0;34m(url, data, json, **kwargs)[0m
[1;32m    115[0m [0;34m[0m[0m
[0;32m--> 116[0;31m     [0;32mreturn[0m [0mrequest[0m[0;34m([0m[0;34m'post'[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m [0mjson[0m[0;34m=[0m[0mjson[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    117[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     59[0m     [0;32mwith[0m [0msessions[0m[0;34m.[0m[0mSession[0m[0;34m([0m[0;34m)[0m [0;32mas[0m [0msession[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 60[0;31m         [0;32mreturn[0m [0msession[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m=[0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m=[0m[0murl[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     61[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36mrequest[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    532[0m         [0msend_kwargs[0m[0;34m.[0m[0mupdate[0m[0;34m([0m[0msettings[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 533[0;31m         [0mresp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mprep[0m[0;34m,[0m [0;34m**[0m[0msend_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    534[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36msend[0;34m(self, request, **kwargs)[0m
[1;32m    645[0m         [0;31m# Send the request[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 646[0;31m         [0mr[0m [0;34m=[0m [0madapter[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mrequest[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    647[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    515[0m [0;34m[0m[0m
[0;32m--> 516[0;31m             [0;32mraise[0m [0mConnectionError[0m[0;34m([0m[0me[0m[0;34m,[0m [0mrequest[0m[0;34m=[0m[0mrequest[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    517[0m [0;34m[0m[0m

[0;31mConnectionError[0m: HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Max retries exceeded with url: /WaterControl/shefgraph-historic.cfm?sid=01100Q (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x124af3860>: Failed to establish a new connection: [Errno 61] Connection refused',))

During handling of the above exception, another exception occurred:

[0;31mUnboundLocalError[0m                         Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     27[0m         [0;32mif[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'01100'[0m [0;32mor[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'03045'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     28[0m                 [0mriver[0m [0;34m=[0m [0musace[0m[0;34m([0m[0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 29[0;31m                 [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     30[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     31[0m                 [0;32mif[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'FL252'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usace.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     23[0m         [0;32mdef[0m [0mbs4[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     24[0m                 [0mfid[0m[0;34m,[0m [0mpayload[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mpayload[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 25[0;31m                 [0mself[0m[0;34m.[0m[0mncout[0m [0;34m=[0m [0msubs[0m[0;34m.[0m[0mwith_exception[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mpayload[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     26[0m                 [0modata[0m[0;34m,[0m [0modate[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m,[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m     27[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/subs.py[0m in [0;36mwith_exception[0;34m(fid, payload)[0m
[1;32m     19[0m                         [0;32mreturn[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m     20[0m                 [0;32mexcept[0m [0mrequests[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mConnectionError[0m [0;32mas[0m [0merrc[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 21[0;31m                         [0mprint[0m[0;34m([0m [0;34m' Error (Connecting): {}'[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0merrt[0m[0;34m)[0m [0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     22[0m                         [0;32mreturn[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m     23[0m                 [0;32mexcept[0m [0mrequests[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mHTTPError[0m [0;32mas[0m [0merrh[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mUnboundLocalError[0m: local variable 'errt' referenced before assignment
convert nc data to ascii
Sat Jun  1 10:32:56 CDT 2019
 
 
 
Sun Jun  2 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
 Error (Timeout): HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out. (read timeout=5)
river id: 03045atc
 Error (Timeout): HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out. (read timeout=5)
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sun Jun  2 10:35:01 CDT 2019
 
 
 
Mon Jun  3 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
 Error (Timeout): HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out. (read timeout=5)
river id: 03045atc
 Error (Timeout): HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out. (read timeout=5)
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Mon Jun  3 10:35:05 CDT 2019
 
 
 
Tue Jun  4 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Tue Jun  4 10:35:09 CDT 2019
 
 
 
Wed Jun  5 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
[0;31m---------------------------------------------------------------------------[0m
[0;31mtimeout[0m                                   Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    158[0m             conn = connection.create_connection(
[0;32m--> 159[0;31m                 (self._dns_host, self.port), self.timeout, **extra_kw)
[0m[1;32m    160[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/connection.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[1;32m     79[0m     [0;32mif[0m [0merr[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 80[0;31m         [0;32mraise[0m [0merr[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     81[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/connection.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[1;32m     69[0m                 [0msock[0m[0;34m.[0m[0mbind[0m[0;34m([0m[0msource_address[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 70[0;31m             [0msock[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0msa[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     71[0m             [0;32mreturn[0m [0msock[0m[0;34m[0m[0;34m[0m[0m

[0;31mtimeout[0m: timed out

During handling of the above exception, another exception occurred:

[0;31mConnectTimeoutError[0m                       Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    599[0m                                                   [0mbody[0m[0;34m=[0m[0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m=[0m[0mheaders[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 600[0;31m                                                   chunked=chunked)
[0m[1;32m    601[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36m_make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    353[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 354[0;31m             [0mconn[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0;34m**[0m[0mhttplib_request_kw[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    355[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mrequest[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1238[0m         [0;34m"""Send a complete request to the server."""[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1239[0;31m         [0mself[0m[0;34m.[0m[0m_send_request[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m,[0m [0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1240[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_request[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1284[0m             [0mbody[0m [0;34m=[0m [0m_encode[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0;34m'body'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1285[0;31m         [0mself[0m[0;34m.[0m[0mendheaders[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1286[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mendheaders[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1233[0m             [0;32mraise[0m [0mCannotSendHeader[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1234[0;31m         [0mself[0m[0;34m.[0m[0m_send_output[0m[0;34m([0m[0mmessage_body[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1235[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_output[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1025[0m         [0;32mdel[0m [0mself[0m[0;34m.[0m[0m_buffer[0m[0;34m[[0m[0;34m:[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1026[0;31m         [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mmsg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1027[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36msend[0;34m(self, data)[0m
[1;32m    963[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0mauto_open[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 964[0;31m                 [0mself[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    965[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36mconnect[0;34m(self)[0m
[1;32m    180[0m     [0;32mdef[0m [0mconnect[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 181[0;31m         [0mconn[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_new_conn[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    182[0m         [0mself[0m[0;34m.[0m[0m_prepare_conn[0m[0;34m([0m[0mconn[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    163[0m                 [0mself[0m[0;34m,[0m [0;34m"Connection to %s timed out. (connect timeout=%s)"[0m [0;34m%[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 164[0;31m                 (self.host, self.timeout))
[0m[1;32m    165[0m [0;34m[0m[0m

[0;31mConnectTimeoutError[0m: (<urllib3.connection.HTTPConnection object at 0x120572828>, 'Connection to rivergages.mvr.usace.army.mil timed out. (connect timeout=5)')

During handling of the above exception, another exception occurred:

[0;31mMaxRetryError[0m                             Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    448[0m                     [0mretries[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mmax_retries[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 449[0;31m                     [0mtimeout[0m[0;34m=[0m[0mtimeout[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    450[0m                 )

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    637[0m             retries = retries.increment(method, url, error=e, _pool=self,
[0;32m--> 638[0;31m                                         _stacktrace=sys.exc_info()[2])
[0m[1;32m    639[0m             [0mretries[0m[0;34m.[0m[0msleep[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/retry.py[0m in [0;36mincrement[0;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[1;32m    397[0m         [0;32mif[0m [0mnew_retry[0m[0;34m.[0m[0mis_exhausted[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 398[0;31m             [0;32mraise[0m [0mMaxRetryError[0m[0;34m([0m[0m_pool[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0merror[0m [0;32mor[0m [0mResponseError[0m[0;34m([0m[0mcause[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    399[0m [0;34m[0m[0m

[0;31mMaxRetryError[0m: HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Max retries exceeded with url: /WaterControl/shefgraph-historic.cfm?sid=01100Q (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x120572828>, 'Connection to rivergages.mvr.usace.army.mil timed out. (connect timeout=5)'))

During handling of the above exception, another exception occurred:

[0;31mConnectTimeout[0m                            Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     27[0m         [0;32mif[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'01100'[0m [0;32mor[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'03045'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     28[0m                 [0mriver[0m [0;34m=[0m [0musace[0m[0;34m([0m[0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 29[0;31m                 [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     30[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     31[0m                 [0;32mif[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'FL252'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usace.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     26[0m                 [0modata[0m[0;34m,[0m [0modate[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m,[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m     27[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 28[0;31m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     29[0m                         [0;31m#for style in BeautifulSoup(r.text,'lxml').select('.style3'):[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0;32mfor[0m [0mstyle[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'html.parser'[0m[0;34m)[0m[0;34m.[0m[0mselect[0m[0;34m([0m[0;34m'.style3'[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mpost[0;34m(url, data, json, **kwargs)[0m
[1;32m    114[0m     """
[1;32m    115[0m [0;34m[0m[0m
[0;32m--> 116[0;31m     [0;32mreturn[0m [0mrequest[0m[0;34m([0m[0;34m'post'[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m [0mjson[0m[0;34m=[0m[0mjson[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    117[0m [0;34m[0m[0m
[1;32m    118[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     58[0m     [0;31m# cases, and look like a memory leak in others.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m     59[0m     [0;32mwith[0m [0msessions[0m[0;34m.[0m[0mSession[0m[0;34m([0m[0;34m)[0m [0;32mas[0m [0msession[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 60[0;31m         [0;32mreturn[0m [0msession[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m=[0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m=[0m[0murl[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     61[0m [0;34m[0m[0m
[1;32m     62[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36mrequest[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    531[0m         }
[1;32m    532[0m         [0msend_kwargs[0m[0;34m.[0m[0mupdate[0m[0;34m([0m[0msettings[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 533[0;31m         [0mresp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mprep[0m[0;34m,[0m [0;34m**[0m[0msend_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    534[0m [0;34m[0m[0m
[1;32m    535[0m         [0;32mreturn[0m [0mresp[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36msend[0;34m(self, request, **kwargs)[0m
[1;32m    644[0m [0;34m[0m[0m
[1;32m    645[0m         [0;31m# Send the request[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 646[0;31m         [0mr[0m [0;34m=[0m [0madapter[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mrequest[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    647[0m [0;34m[0m[0m
[1;32m    648[0m         [0;31m# Total elapsed time of the request (approximately)[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    502[0m                 [0;31m# TODO: Remove this in 3.0.0: see #2811[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    503[0m                 [0;32mif[0m [0;32mnot[0m [0misinstance[0m[0;34m([0m[0me[0m[0;34m.[0m[0mreason[0m[0;34m,[0m [0mNewConnectionError[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 504[0;31m                     [0;32mraise[0m [0mConnectTimeout[0m[0;34m([0m[0me[0m[0;34m,[0m [0mrequest[0m[0;34m=[0m[0mrequest[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    505[0m [0;34m[0m[0m
[1;32m    506[0m             [0;32mif[0m [0misinstance[0m[0;34m([0m[0me[0m[0;34m.[0m[0mreason[0m[0;34m,[0m [0mResponseError[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mConnectTimeout[0m: HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Max retries exceeded with url: /WaterControl/shefgraph-historic.cfm?sid=01100Q (Caused by ConnectTimeoutError(<urllib3.connection.HTTPConnection object at 0x120572828>, 'Connection to rivergages.mvr.usace.army.mil timed out. (connect timeout=5)'))
convert nc data to ascii
Wed Jun  5 10:33:06 CDT 2019
 
 
 
Thu Jun  6 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu Jun  6 10:35:01 CDT 2019
 
 
 
Fri Jun  7 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Fri Jun  7 10:35:08 CDT 2019
 
 
 
Sat Jun  8 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sat Jun  8 10:34:58 CDT 2019
 
 
 
Sun Jun  9 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sun Jun  9 10:34:58 CDT 2019
 
 
 
Mon Jun 10 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Mon Jun 10 10:35:00 CDT 2019
 
 
 
Tue Jun 11 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Tue Jun 11 10:34:59 CDT 2019
 
 
 
Wed Jun 12 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Wed Jun 12 10:35:06 CDT 2019
 
 
 
Thu Jun 13 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu Jun 13 10:35:03 CDT 2019
 
 
 
Fri Jun 14 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Fri Jun 14 10:35:06 CDT 2019
 
 
 
Sat Jun 15 10:32:06 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sat Jun 15 10:35:08 CDT 2019
 
 
 
Sun Jun 16 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sun Jun 16 10:34:57 CDT 2019
 
 
 
Mon Jun 17 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Mon Jun 17 10:35:05 CDT 2019
 
 
 
Tue Jun 18 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Tue Jun 18 10:35:15 CDT 2019
 
 
 
Wed Jun 19 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Wed Jun 19 10:34:57 CDT 2019
 
 
 
Thu Jun 20 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu Jun 20 10:35:14 CDT 2019
 
 
 
Fri Jun 21 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Fri Jun 21 10:35:05 CDT 2019
 
 
 
Sat Jun 22 10:32:06 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sat Jun 22 10:35:28 CDT 2019
 
 
 
Sun Jun 23 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sun Jun 23 10:35:01 CDT 2019
 
 
 
Mon Jun 24 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Mon Jun 24 10:35:06 CDT 2019
 
 
 
Tue Jun 25 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Tue Jun 25 10:34:58 CDT 2019
 
 
 
Wed Jun 26 10:32:06 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Wed Jun 26 10:35:10 CDT 2019
 
 
 
Thu Jun 27 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu Jun 27 10:35:03 CDT 2019
 
 
 
Fri Jun 28 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
[0;31m---------------------------------------------------------------------------[0m
[0;31mgaierror[0m                                  Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    158[0m             conn = connection.create_connection(
[0;32m--> 159[0;31m                 (self._dns_host, self.port), self.timeout, **extra_kw)
[0m[1;32m    160[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/connection.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[1;32m     56[0m [0;34m[0m[0m
[0;32m---> 57[0;31m     [0;32mfor[0m [0mres[0m [0;32min[0m [0msocket[0m[0;34m.[0m[0mgetaddrinfo[0m[0;34m([0m[0mhost[0m[0;34m,[0m [0mport[0m[0;34m,[0m [0mfamily[0m[0;34m,[0m [0msocket[0m[0;34m.[0m[0mSOCK_STREAM[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     58[0m         [0maf[0m[0;34m,[0m [0msocktype[0m[0;34m,[0m [0mproto[0m[0;34m,[0m [0mcanonname[0m[0;34m,[0m [0msa[0m [0;34m=[0m [0mres[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/socket.py[0m in [0;36mgetaddrinfo[0;34m(host, port, family, type, proto, flags)[0m
[1;32m    744[0m     [0maddrlist[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 745[0;31m     [0;32mfor[0m [0mres[0m [0;32min[0m [0m_socket[0m[0;34m.[0m[0mgetaddrinfo[0m[0;34m([0m[0mhost[0m[0;34m,[0m [0mport[0m[0;34m,[0m [0mfamily[0m[0;34m,[0m [0mtype[0m[0;34m,[0m [0mproto[0m[0;34m,[0m [0mflags[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    746[0m         [0maf[0m[0;34m,[0m [0msocktype[0m[0;34m,[0m [0mproto[0m[0;34m,[0m [0mcanonname[0m[0;34m,[0m [0msa[0m [0;34m=[0m [0mres[0m[0;34m[0m[0;34m[0m[0m

[0;31mgaierror[0m: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

[0;31mNewConnectionError[0m                        Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    599[0m                                                   [0mbody[0m[0;34m=[0m[0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m=[0m[0mheaders[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 600[0;31m                                                   chunked=chunked)
[0m[1;32m    601[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36m_make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    353[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 354[0;31m             [0mconn[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0;34m**[0m[0mhttplib_request_kw[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    355[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mrequest[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1238[0m         [0;34m"""Send a complete request to the server."""[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1239[0;31m         [0mself[0m[0;34m.[0m[0m_send_request[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m,[0m [0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1240[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_request[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1284[0m             [0mbody[0m [0;34m=[0m [0m_encode[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0;34m'body'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1285[0;31m         [0mself[0m[0;34m.[0m[0mendheaders[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1286[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mendheaders[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1233[0m             [0;32mraise[0m [0mCannotSendHeader[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1234[0;31m         [0mself[0m[0;34m.[0m[0m_send_output[0m[0;34m([0m[0mmessage_body[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1235[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_output[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1025[0m         [0;32mdel[0m [0mself[0m[0;34m.[0m[0m_buffer[0m[0;34m[[0m[0;34m:[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1026[0;31m         [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mmsg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1027[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36msend[0;34m(self, data)[0m
[1;32m    963[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0mauto_open[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 964[0;31m                 [0mself[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    965[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36mconnect[0;34m(self)[0m
[1;32m    180[0m     [0;32mdef[0m [0mconnect[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 181[0;31m         [0mconn[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_new_conn[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    182[0m         [0mself[0m[0;34m.[0m[0m_prepare_conn[0m[0;34m([0m[0mconn[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    167[0m             raise NewConnectionError(
[0;32m--> 168[0;31m                 self, "Failed to establish a new connection: %s" % e)
[0m[1;32m    169[0m [0;34m[0m[0m

[0;31mNewConnectionError[0m: <urllib3.connection.HTTPConnection object at 0x117677c88>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

[0;31mMaxRetryError[0m                             Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    448[0m                     [0mretries[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mmax_retries[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 449[0;31m                     [0mtimeout[0m[0;34m=[0m[0mtimeout[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    450[0m                 )

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    637[0m             retries = retries.increment(method, url, error=e, _pool=self,
[0;32m--> 638[0;31m                                         _stacktrace=sys.exc_info()[2])
[0m[1;32m    639[0m             [0mretries[0m[0;34m.[0m[0msleep[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/retry.py[0m in [0;36mincrement[0;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[1;32m    397[0m         [0;32mif[0m [0mnew_retry[0m[0;34m.[0m[0mis_exhausted[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 398[0;31m             [0;32mraise[0m [0mMaxRetryError[0m[0;34m([0m[0m_pool[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0merror[0m [0;32mor[0m [0mResponseError[0m[0;34m([0m[0mcause[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    399[0m [0;34m[0m[0m

[0;31mMaxRetryError[0m: HTTPConnectionPool(host='waterdata.usgs.gov', port=80): Max retries exceeded with url: /nwis/dv?cb_00060=on&format=rdb&begin_date=2019-04-29&end_date=2019-06-28&site_no=08162500&referred_module=sw (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x117677c88>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known',))

During handling of the above exception, another exception occurred:

[0;31mConnectionError[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     28[0m                 [0modata[0m[0;34m,[0m [0modate[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m,[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 30[0;31m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     31[0m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mpost[0;34m(url, data, json, **kwargs)[0m
[1;32m    114[0m     """
[1;32m    115[0m [0;34m[0m[0m
[0;32m--> 116[0;31m     [0;32mreturn[0m [0mrequest[0m[0;34m([0m[0;34m'post'[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m [0mjson[0m[0;34m=[0m[0mjson[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    117[0m [0;34m[0m[0m
[1;32m    118[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     58[0m     [0;31m# cases, and look like a memory leak in others.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m     59[0m     [0;32mwith[0m [0msessions[0m[0;34m.[0m[0mSession[0m[0;34m([0m[0;34m)[0m [0;32mas[0m [0msession[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 60[0;31m         [0;32mreturn[0m [0msession[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m=[0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m=[0m[0murl[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     61[0m [0;34m[0m[0m
[1;32m     62[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36mrequest[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    531[0m         }
[1;32m    532[0m         [0msend_kwargs[0m[0;34m.[0m[0mupdate[0m[0;34m([0m[0msettings[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 533[0;31m         [0mresp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mprep[0m[0;34m,[0m [0;34m**[0m[0msend_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    534[0m [0;34m[0m[0m
[1;32m    535[0m         [0;32mreturn[0m [0mresp[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36msend[0;34m(self, request, **kwargs)[0m
[1;32m    644[0m [0;34m[0m[0m
[1;32m    645[0m         [0;31m# Send the request[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 646[0;31m         [0mr[0m [0;34m=[0m [0madapter[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mrequest[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    647[0m [0;34m[0m[0m
[1;32m    648[0m         [0;31m# Total elapsed time of the request (approximately)[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    514[0m                 [0;32mraise[0m [0mSSLError[0m[0;34m([0m[0me[0m[0;34m,[0m [0mrequest[0m[0;34m=[0m[0mrequest[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    515[0m [0;34m[0m[0m
[0;32m--> 516[0;31m             [0;32mraise[0m [0mConnectionError[0m[0;34m([0m[0me[0m[0;34m,[0m [0mrequest[0m[0;34m=[0m[0mrequest[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    517[0m [0;34m[0m[0m
[1;32m    518[0m         [0;32mexcept[0m [0mClosedPoolError[0m [0;32mas[0m [0me[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mConnectionError[0m: HTTPConnectionPool(host='waterdata.usgs.gov', port=80): Max retries exceeded with url: /nwis/dv?cb_00060=on&format=rdb&begin_date=2019-04-29&end_date=2019-06-28&site_no=08162500&referred_module=sw (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x117677c88>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known',))
convert nc data to ascii
 
 
 
Sat Jun 29 10:32:06 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sat Jun 29 10:35:11 CDT 2019
 
 
 
Sun Jun 30 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sun Jun 30 10:34:56 CDT 2019
 
 
 
Mon Jul  1 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Mon Jul  1 10:35:30 CDT 2019
 
 
 
Tue Jul  2 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Tue Jul  2 10:35:00 CDT 2019
 
 
 
Wed Jul  3 10:32:07 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Wed Jul  3 10:35:11 CDT 2019
 
 
 
Thu Jul  4 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu Jul  4 10:34:57 CDT 2019
 
 
 
Fri Jul  5 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Fri Jul  5 10:36:16 CDT 2019
 
 
 
Sat Jul  6 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sat Jul  6 10:34:54 CDT 2019
 
 
 
Sun Jul  7 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sun Jul  7 10:34:58 CDT 2019
 
 
 
Mon Jul  8 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Mon Jul  8 10:35:04 CDT 2019
 
 
 
Tue Jul  9 10:32:06 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Tue Jul  9 10:35:06 CDT 2019
 
 
 
Wed Jul 10 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Wed Jul 10 10:34:54 CDT 2019
 
 
 
Thu Jul 11 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu Jul 11 10:34:55 CDT 2019
 
 
 
Fri Jul 12 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Fri Jul 12 10:34:55 CDT 2019
 
 
 
Sat Jul 13 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sat Jul 13 10:34:56 CDT 2019
 
 
 
Sun Jul 14 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sun Jul 14 10:35:04 CDT 2019
 
 
 
Mon Jul 15 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Mon Jul 15 10:34:52 CDT 2019
 
 
 
Tue Jul 16 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Tue Jul 16 10:35:10 CDT 2019
 
 
 
Wed Jul 17 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Wed Jul 17 10:35:12 CDT 2019
 
 
 
Thu Jul 18 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu Jul 18 10:35:09 CDT 2019
 
 
 
Fri Jul 19 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Fri Jul 19 10:35:15 CDT 2019
 
 
 
Sat Jul 20 10:32:06 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sat Jul 20 10:35:23 CDT 2019
 
 
 
Sun Jul 21 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Sun Jul 21 10:35:29 CDT 2019
 
 
 
Mon Jul 22 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Mon Jul 22 10:35:00 CDT 2019
 
 
 
Tue Jul 23 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Tue Jul 23 10:35:21 CDT 2019
 
 
 
Wed Jul 24 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Wed Jul 24 10:35:37 CDT 2019
 
 
 
Thu Jul 25 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Thu Jul 25 10:35:03 CDT 2019
 
 
 
Fri Jul 26 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
river id: 02296750
river id: 02298880
river id: 02310525
river id: 02310747
river id: 02313100
river id: 02320500
river id: 02324000
river id: 02324400
river id: 02325000
river id: 02326000
river id: 02330000
river id: 02330150
river id: 02359000
river id: 02359170
river id: 02366500
river id: 02368000
river id: 02369000
river id: 02369600
river id: 02370000
river id: 02375500
river id: 02376033
river id: 02376500
river id: 02428400
river id: 02469761
river id: 02479000
river id: 02479160
river id: 02479300
river id: 02479310
river id: 02481510
river id: 02489500
river id: 02492000
river id: 07375500
river id: 07378500
river id: 07385500
river id: 07386980
river id: 08012000
river id: 08015500
river id: 08030500
river id: 08041000
river id: 08041500
river id: 08066500
river id: 08068090
river id: 08075000
river id: 08116650
river id: 08117500
river id: 08162500
river id: 08164000
river id: 08176500
river id: 08188500
river id: 08189500
river id: 08189700
river id: 08211000
river id: 02358000
river id: 02365500
river id: 08068000
river id: 02319500
river id: 02479130
river id: FL252230
convert nc data to ascii
Fri Jul 26 10:34:54 CDT 2019
 
 
 
Sat Jul 27 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sat Jul 27 10:33:07 CDT 2019
 
 
 
Sun Jul 28 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sun Jul 28 10:33:08 CDT 2019
 
 
 
Mon Jul 29 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Mon Jul 29 10:33:04 CDT 2019
 
 
 
Tue Jul 30 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Tue Jul 30 10:33:06 CDT 2019
 
 
 
Wed Jul 31 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Wed Jul 31 10:33:13 CDT 2019
 
 
 
Thu Aug  1 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Thu Aug  1 10:33:12 CDT 2019
 
 
 
Fri Aug  2 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Fri Aug  2 10:33:11 CDT 2019
 
 
 
Sat Aug  3 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sat Aug  3 10:33:08 CDT 2019
 
 
 
Sun Aug  4 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sun Aug  4 10:33:03 CDT 2019
 
 
 
Mon Aug  5 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Mon Aug  5 10:33:07 CDT 2019
 
 
 
Tue Aug  6 10:32:06 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Tue Aug  6 10:33:23 CDT 2019
 
 
 
Wed Aug  7 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
[0;31m---------------------------------------------------------------------------[0m
[0;31mtimeout[0m                                   Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/response.py[0m in [0;36m_error_catcher[0;34m(self)[0m
[1;32m    396[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 397[0;31m                 [0;32myield[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    398[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/response.py[0m in [0;36mread_chunked[0;34m(self, amt, decode_content)[0m
[1;32m    703[0m             [0;32mwhile[0m [0;32mTrue[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 704[0;31m                 [0mself[0m[0;34m.[0m[0m_update_chunk_length[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    705[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mchunk_left[0m [0;34m==[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/response.py[0m in [0;36m_update_chunk_length[0;34m(self)[0m
[1;32m    635[0m             [0;32mreturn[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 636[0;31m         [0mline[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_fp[0m[0;34m.[0m[0mfp[0m[0;34m.[0m[0mreadline[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    637[0m         [0mline[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34mb';'[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/socket.py[0m in [0;36mreadinto[0;34m(self, b)[0m
[1;32m    585[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 586[0;31m                 [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_sock[0m[0;34m.[0m[0mrecv_into[0m[0;34m([0m[0mb[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    587[0m             [0;32mexcept[0m [0mtimeout[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mtimeout[0m: timed out

During handling of the above exception, another exception occurred:

[0;31mReadTimeoutError[0m                          Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/models.py[0m in [0;36mgenerate[0;34m()[0m
[1;32m    749[0m                 [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 750[0;31m                     [0;32mfor[0m [0mchunk[0m [0;32min[0m [0mself[0m[0;34m.[0m[0mraw[0m[0;34m.[0m[0mstream[0m[0;34m([0m[0mchunk_size[0m[0;34m,[0m [0mdecode_content[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    751[0m                         [0;32myield[0m [0mchunk[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/response.py[0m in [0;36mstream[0;34m(self, amt, decode_content)[0m
[1;32m    526[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0mchunked[0m [0;32mand[0m [0mself[0m[0;34m.[0m[0msupports_chunked_reads[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 527[0;31m             [0;32mfor[0m [0mline[0m [0;32min[0m [0mself[0m[0;34m.[0m[0mread_chunked[0m[0;34m([0m[0mamt[0m[0;34m,[0m [0mdecode_content[0m[0;34m=[0m[0mdecode_content[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    528[0m                 [0;32myield[0m [0mline[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/response.py[0m in [0;36mread_chunked[0;34m(self, amt, decode_content)[0m
[1;32m    731[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0m_original_response[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 732[0;31m                 [0mself[0m[0;34m.[0m[0m_original_response[0m[0;34m.[0m[0mclose[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    733[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/contextlib.py[0m in [0;36m__exit__[0;34m(self, type, value, traceback)[0m
[1;32m     98[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 99[0;31m                 [0mself[0m[0;34m.[0m[0mgen[0m[0;34m.[0m[0mthrow[0m[0;34m([0m[0mtype[0m[0;34m,[0m [0mvalue[0m[0;34m,[0m [0mtraceback[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    100[0m             [0;32mexcept[0m [0mStopIteration[0m [0;32mas[0m [0mexc[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/response.py[0m in [0;36m_error_catcher[0;34m(self)[0m
[1;32m    401[0m                 [0;31m# there is yet no clean way to get at it from this context.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 402[0;31m                 [0;32mraise[0m [0mReadTimeoutError[0m[0;34m([0m[0mself[0m[0;34m.[0m[0m_pool[0m[0;34m,[0m [0;32mNone[0m[0;34m,[0m [0;34m'Read timed out.'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    403[0m [0;34m[0m[0m

[0;31mReadTimeoutError[0m: HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out.

During handling of the above exception, another exception occurred:

[0;31mConnectionError[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/models/subs.py[0m in [0;36mwith_exception[0;34m(fid, payload)[0m
[1;32m     14[0m                 [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 15[0;31m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     16[0m                         [0;32mreturn[0m [0;36m1[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mpost[0;34m(url, data, json, **kwargs)[0m
[1;32m    115[0m [0;34m[0m[0m
[0;32m--> 116[0;31m     [0;32mreturn[0m [0mrequest[0m[0;34m([0m[0;34m'post'[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m [0mjson[0m[0;34m=[0m[0mjson[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    117[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     59[0m     [0;32mwith[0m [0msessions[0m[0;34m.[0m[0mSession[0m[0;34m([0m[0;34m)[0m [0;32mas[0m [0msession[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 60[0;31m         [0;32mreturn[0m [0msession[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m=[0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m=[0m[0murl[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     61[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36mrequest[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    532[0m         [0msend_kwargs[0m[0;34m.[0m[0mupdate[0m[0;34m([0m[0msettings[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 533[0;31m         [0mresp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mprep[0m[0;34m,[0m [0;34m**[0m[0msend_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    534[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36msend[0;34m(self, request, **kwargs)[0m
[1;32m    685[0m         [0;32mif[0m [0;32mnot[0m [0mstream[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 686[0;31m             [0mr[0m[0;34m.[0m[0mcontent[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    687[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/models.py[0m in [0;36mcontent[0;34m(self)[0m
[1;32m    827[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 828[0;31m                 [0mself[0m[0;34m.[0m[0m_content[0m [0;34m=[0m [0;34mb''[0m[0;34m.[0m[0mjoin[0m[0;34m([0m[0mself[0m[0;34m.[0m[0miter_content[0m[0;34m([0m[0mCONTENT_CHUNK_SIZE[0m[0;34m)[0m[0;34m)[0m [0;32mor[0m [0;34mb''[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    829[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/models.py[0m in [0;36mgenerate[0;34m()[0m
[1;32m    756[0m                 [0;32mexcept[0m [0mReadTimeoutError[0m [0;32mas[0m [0me[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 757[0;31m                     [0;32mraise[0m [0mConnectionError[0m[0;34m([0m[0me[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    758[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mConnectionError[0m: HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out.

During handling of the above exception, another exception occurred:

[0;31mUnboundLocalError[0m                         Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     27[0m         [0;32mif[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'01100'[0m [0;32mor[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'03045'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     28[0m                 [0mriver[0m [0;34m=[0m [0musace[0m[0;34m([0m[0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 29[0;31m                 [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     30[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     31[0m                 [0;32mif[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'FL252'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usace.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     23[0m         [0;32mdef[0m [0mbs4[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     24[0m                 [0mfid[0m[0;34m,[0m [0mpayload[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mpayload[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 25[0;31m                 [0mself[0m[0;34m.[0m[0mncout[0m [0;34m=[0m [0msubs[0m[0;34m.[0m[0mwith_exception[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mpayload[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     26[0m                 [0modata[0m[0;34m,[0m [0modate[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m,[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m     27[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/subs.py[0m in [0;36mwith_exception[0;34m(fid, payload)[0m
[1;32m     19[0m                         [0;32mreturn[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m     20[0m                 [0;32mexcept[0m [0mrequests[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mConnectionError[0m [0;32mas[0m [0merrc[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 21[0;31m                         [0mprint[0m[0;34m([0m [0;34m' Error (Connecting): {}'[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0merrt[0m[0;34m)[0m [0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     22[0m                         [0;32mreturn[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m     23[0m                 [0;32mexcept[0m [0mrequests[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mHTTPError[0m [0;32mas[0m [0merrh[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mUnboundLocalError[0m: local variable 'errt' referenced before assignment
convert nc data to ascii
Wed Aug  7 10:33:14 CDT 2019
 
 
 
Thu Aug  8 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Thu Aug  8 10:33:08 CDT 2019
 
 
 
Fri Aug  9 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Fri Aug  9 10:33:09 CDT 2019
 
 
 
Sat Aug 10 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sat Aug 10 10:33:04 CDT 2019
 
 
 
Sun Aug 11 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sun Aug 11 10:33:12 CDT 2019
 
 
 
Mon Aug 12 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Mon Aug 12 10:33:08 CDT 2019
 
 
 
Tue Aug 13 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Tue Aug 13 10:33:08 CDT 2019
 
 
 
Wed Aug 14 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Wed Aug 14 10:33:09 CDT 2019
 
 
 
Thu Aug 15 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Thu Aug 15 10:33:03 CDT 2019
 
 
 
Fri Aug 16 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Fri Aug 16 10:33:08 CDT 2019
 
 
 
Sat Aug 17 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sat Aug 17 10:33:03 CDT 2019
 
 
 
Sun Aug 18 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sun Aug 18 10:33:07 CDT 2019
 
 
 
Mon Aug 19 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Mon Aug 19 10:33:07 CDT 2019
 
 
 
Tue Aug 20 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Tue Aug 20 10:33:11 CDT 2019
 
 
 
Wed Aug 21 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Wed Aug 21 10:33:06 CDT 2019
 
 
 
Thu Aug 22 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Thu Aug 22 10:33:06 CDT 2019
 
 
 
Fri Aug 23 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Fri Aug 23 10:33:08 CDT 2019
 
 
 
Sat Aug 24 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sat Aug 24 10:33:04 CDT 2019
 
 
 
Sun Aug 25 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sun Aug 25 10:33:14 CDT 2019
 
 
 
Mon Aug 26 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Mon Aug 26 10:33:04 CDT 2019
 
 
 
Tue Aug 27 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Tue Aug 27 10:33:04 CDT 2019
 
 
 
Wed Aug 28 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Wed Aug 28 10:33:06 CDT 2019
 
 
 
Thu Aug 29 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
 Error (Timeout): HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out. (read timeout=5)
river id: 03045atc
 Error (Timeout): HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out. (read timeout=5)
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Thu Aug 29 10:33:09 CDT 2019
 
 
 
Fri Aug 30 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Fri Aug 30 10:33:04 CDT 2019
 
 
 
Sat Aug 31 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sat Aug 31 10:33:01 CDT 2019
 
 
 
Sun Sep  1 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sun Sep  1 10:33:03 CDT 2019
 
 
 
Mon Sep  2 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Mon Sep  2 10:33:01 CDT 2019
 
 
 
Tue Sep  3 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Tue Sep  3 10:33:03 CDT 2019
 
 
 
Wed Sep  4 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Wed Sep  4 10:33:02 CDT 2019
 
 
 
Thu Sep  5 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Thu Sep  5 10:33:05 CDT 2019
 
 
 
Fri Sep  6 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Fri Sep  6 10:33:02 CDT 2019
 
 
 
Sat Sep  7 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sat Sep  7 10:33:00 CDT 2019
 
 
 
Sun Sep  8 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sun Sep  8 10:33:01 CDT 2019
 
 
 
Mon Sep  9 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Mon Sep  9 10:32:58 CDT 2019
 
 
 
Tue Sep 10 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Tue Sep 10 10:33:00 CDT 2019
 
 
 
Wed Sep 11 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Wed Sep 11 10:33:05 CDT 2019
 
 
 
Thu Sep 12 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Thu Sep 12 10:33:01 CDT 2019
 
 
 
Fri Sep 13 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
[0;31m---------------------------------------------------------------------------[0m
[0;31mConnectionRefusedError[0m                    Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    159[0m             conn = connection.create_connection(
[0;32m--> 160[0;31m                 (self._dns_host, self.port), self.timeout, **extra_kw)
[0m[1;32m    161[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/connection.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[1;32m     79[0m     [0;32mif[0m [0merr[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 80[0;31m         [0;32mraise[0m [0merr[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     81[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/connection.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[1;32m     69[0m                 [0msock[0m[0;34m.[0m[0mbind[0m[0;34m([0m[0msource_address[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 70[0;31m             [0msock[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0msa[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     71[0m             [0;32mreturn[0m [0msock[0m[0;34m[0m[0;34m[0m[0m

[0;31mConnectionRefusedError[0m: [Errno 61] Connection refused

During handling of the above exception, another exception occurred:

[0;31mNewConnectionError[0m                        Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    602[0m                                                   [0mbody[0m[0;34m=[0m[0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m=[0m[0mheaders[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 603[0;31m                                                   chunked=chunked)
[0m[1;32m    604[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36m_make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    354[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 355[0;31m             [0mconn[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0;34m**[0m[0mhttplib_request_kw[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    356[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mrequest[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1238[0m         [0;34m"""Send a complete request to the server."""[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1239[0;31m         [0mself[0m[0;34m.[0m[0m_send_request[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m,[0m [0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1240[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_request[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1284[0m             [0mbody[0m [0;34m=[0m [0m_encode[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0;34m'body'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1285[0;31m         [0mself[0m[0;34m.[0m[0mendheaders[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1286[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mendheaders[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1233[0m             [0;32mraise[0m [0mCannotSendHeader[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1234[0;31m         [0mself[0m[0;34m.[0m[0m_send_output[0m[0;34m([0m[0mmessage_body[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1235[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_output[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1025[0m         [0;32mdel[0m [0mself[0m[0;34m.[0m[0m_buffer[0m[0;34m[[0m[0;34m:[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1026[0;31m         [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mmsg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1027[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36msend[0;34m(self, data)[0m
[1;32m    963[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0mauto_open[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 964[0;31m                 [0mself[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    965[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36mconnect[0;34m(self)[0m
[1;32m    182[0m     [0;32mdef[0m [0mconnect[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 183[0;31m         [0mconn[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_new_conn[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    184[0m         [0mself[0m[0;34m.[0m[0m_prepare_conn[0m[0;34m([0m[0mconn[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    168[0m             raise NewConnectionError(
[0;32m--> 169[0;31m                 self, "Failed to establish a new connection: %s" % e)
[0m[1;32m    170[0m [0;34m[0m[0m

[0;31mNewConnectionError[0m: <urllib3.connection.HTTPConnection object at 0x11e0c6c50>: Failed to establish a new connection: [Errno 61] Connection refused

During handling of the above exception, another exception occurred:

[0;31mMaxRetryError[0m                             Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    448[0m                     [0mretries[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mmax_retries[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 449[0;31m                     [0mtimeout[0m[0;34m=[0m[0mtimeout[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    450[0m                 )

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    640[0m             retries = retries.increment(method, url, error=e, _pool=self,
[0;32m--> 641[0;31m                                         _stacktrace=sys.exc_info()[2])
[0m[1;32m    642[0m             [0mretries[0m[0;34m.[0m[0msleep[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/retry.py[0m in [0;36mincrement[0;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[1;32m    398[0m         [0;32mif[0m [0mnew_retry[0m[0;34m.[0m[0mis_exhausted[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 399[0;31m             [0;32mraise[0m [0mMaxRetryError[0m[0;34m([0m[0m_pool[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0merror[0m [0;32mor[0m [0mResponseError[0m[0;34m([0m[0mcause[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    400[0m [0;34m[0m[0m

[0;31mMaxRetryError[0m: HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Max retries exceeded with url: /WaterControl/shefgraph-historic.cfm?sid=01100Q (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x11e0c6c50>: Failed to establish a new connection: [Errno 61] Connection refused',))

During handling of the above exception, another exception occurred:

[0;31mConnectionError[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/models/subs.py[0m in [0;36mwith_exception[0;34m(fid, payload)[0m
[1;32m     14[0m                 [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 15[0;31m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     16[0m                         [0;32mreturn[0m [0;36m1[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mpost[0;34m(url, data, json, **kwargs)[0m
[1;32m    115[0m [0;34m[0m[0m
[0;32m--> 116[0;31m     [0;32mreturn[0m [0mrequest[0m[0;34m([0m[0;34m'post'[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m [0mjson[0m[0;34m=[0m[0mjson[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    117[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     59[0m     [0;32mwith[0m [0msessions[0m[0;34m.[0m[0mSession[0m[0;34m([0m[0;34m)[0m [0;32mas[0m [0msession[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 60[0;31m         [0;32mreturn[0m [0msession[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m=[0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m=[0m[0murl[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     61[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36mrequest[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    532[0m         [0msend_kwargs[0m[0;34m.[0m[0mupdate[0m[0;34m([0m[0msettings[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 533[0;31m         [0mresp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mprep[0m[0;34m,[0m [0;34m**[0m[0msend_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    534[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36msend[0;34m(self, request, **kwargs)[0m
[1;32m    645[0m         [0;31m# Send the request[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 646[0;31m         [0mr[0m [0;34m=[0m [0madapter[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mrequest[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    647[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    515[0m [0;34m[0m[0m
[0;32m--> 516[0;31m             [0;32mraise[0m [0mConnectionError[0m[0;34m([0m[0me[0m[0;34m,[0m [0mrequest[0m[0;34m=[0m[0mrequest[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    517[0m [0;34m[0m[0m

[0;31mConnectionError[0m: HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Max retries exceeded with url: /WaterControl/shefgraph-historic.cfm?sid=01100Q (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x11e0c6c50>: Failed to establish a new connection: [Errno 61] Connection refused',))

During handling of the above exception, another exception occurred:

[0;31mUnboundLocalError[0m                         Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     27[0m         [0;32mif[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'01100'[0m [0;32mor[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'03045'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     28[0m                 [0mriver[0m [0;34m=[0m [0musace[0m[0;34m([0m[0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 29[0;31m                 [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     30[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     31[0m                 [0;32mif[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'FL252'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usace.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     23[0m         [0;32mdef[0m [0mbs4[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     24[0m                 [0mfid[0m[0;34m,[0m [0mpayload[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mpayload[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 25[0;31m                 [0mself[0m[0;34m.[0m[0mncout[0m [0;34m=[0m [0msubs[0m[0;34m.[0m[0mwith_exception[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mpayload[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     26[0m                 [0modata[0m[0;34m,[0m [0modate[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m,[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m     27[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/subs.py[0m in [0;36mwith_exception[0;34m(fid, payload)[0m
[1;32m     19[0m                         [0;32mreturn[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m     20[0m                 [0;32mexcept[0m [0mrequests[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mConnectionError[0m [0;32mas[0m [0merrc[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 21[0;31m                         [0mprint[0m[0;34m([0m [0;34m' Error (Connecting): {}'[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0merrt[0m[0;34m)[0m [0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     22[0m                         [0;32mreturn[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m     23[0m                 [0;32mexcept[0m [0mrequests[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mHTTPError[0m [0;32mas[0m [0merrh[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mUnboundLocalError[0m: local variable 'errt' referenced before assignment
convert nc data to ascii
Fri Sep 13 10:32:54 CDT 2019
 
 
 
Sat Sep 14 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
 Error (Timeout): HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out. (read timeout=5)
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sat Sep 14 10:33:07 CDT 2019
 
 
 
Sun Sep 15 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sun Sep 15 10:33:03 CDT 2019
 
 
 
Mon Sep 16 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Mon Sep 16 10:33:03 CDT 2019
 
 
 
Tue Sep 17 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Tue Sep 17 10:33:02 CDT 2019
 
 
 
Wed Sep 18 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
[0;31m---------------------------------------------------------------------------[0m
[0;31mConnectionRefusedError[0m                    Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    159[0m             conn = connection.create_connection(
[0;32m--> 160[0;31m                 (self._dns_host, self.port), self.timeout, **extra_kw)
[0m[1;32m    161[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/connection.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[1;32m     79[0m     [0;32mif[0m [0merr[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 80[0;31m         [0;32mraise[0m [0merr[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     81[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/connection.py[0m in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[1;32m     69[0m                 [0msock[0m[0;34m.[0m[0mbind[0m[0;34m([0m[0msource_address[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 70[0;31m             [0msock[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0msa[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     71[0m             [0;32mreturn[0m [0msock[0m[0;34m[0m[0;34m[0m[0m

[0;31mConnectionRefusedError[0m: [Errno 61] Connection refused

During handling of the above exception, another exception occurred:

[0;31mNewConnectionError[0m                        Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    602[0m                                                   [0mbody[0m[0;34m=[0m[0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m=[0m[0mheaders[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 603[0;31m                                                   chunked=chunked)
[0m[1;32m    604[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36m_make_request[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)[0m
[1;32m    354[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 355[0;31m             [0mconn[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0;34m**[0m[0mhttplib_request_kw[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    356[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mrequest[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1238[0m         [0;34m"""Send a complete request to the server."""[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1239[0;31m         [0mself[0m[0;34m.[0m[0m_send_request[0m[0;34m([0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mbody[0m[0;34m,[0m [0mheaders[0m[0;34m,[0m [0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1240[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_request[0;34m(self, method, url, body, headers, encode_chunked)[0m
[1;32m   1284[0m             [0mbody[0m [0;34m=[0m [0m_encode[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0;34m'body'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1285[0;31m         [0mself[0m[0;34m.[0m[0mendheaders[0m[0;34m([0m[0mbody[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1286[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36mendheaders[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1233[0m             [0;32mraise[0m [0mCannotSendHeader[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1234[0;31m         [0mself[0m[0;34m.[0m[0m_send_output[0m[0;34m([0m[0mmessage_body[0m[0;34m,[0m [0mencode_chunked[0m[0;34m=[0m[0mencode_chunked[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1235[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36m_send_output[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1025[0m         [0;32mdel[0m [0mself[0m[0;34m.[0m[0m_buffer[0m[0;34m[[0m[0;34m:[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1026[0;31m         [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mmsg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1027[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/http/client.py[0m in [0;36msend[0;34m(self, data)[0m
[1;32m    963[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0mauto_open[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 964[0;31m                 [0mself[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    965[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36mconnect[0;34m(self)[0m
[1;32m    182[0m     [0;32mdef[0m [0mconnect[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 183[0;31m         [0mconn[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_new_conn[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    184[0m         [0mself[0m[0;34m.[0m[0m_prepare_conn[0m[0;34m([0m[0mconn[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connection.py[0m in [0;36m_new_conn[0;34m(self)[0m
[1;32m    168[0m             raise NewConnectionError(
[0;32m--> 169[0;31m                 self, "Failed to establish a new connection: %s" % e)
[0m[1;32m    170[0m [0;34m[0m[0m

[0;31mNewConnectionError[0m: <urllib3.connection.HTTPConnection object at 0x11495ebe0>: Failed to establish a new connection: [Errno 61] Connection refused

During handling of the above exception, another exception occurred:

[0;31mMaxRetryError[0m                             Traceback (most recent call last)
[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    448[0m                     [0mretries[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0mmax_retries[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 449[0;31m                     [0mtimeout[0m[0;34m=[0m[0mtimeout[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    450[0m                 )

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)[0m
[1;32m    640[0m             retries = retries.increment(method, url, error=e, _pool=self,
[0;32m--> 641[0;31m                                         _stacktrace=sys.exc_info()[2])
[0m[1;32m    642[0m             [0mretries[0m[0;34m.[0m[0msleep[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/urllib3/util/retry.py[0m in [0;36mincrement[0;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[1;32m    398[0m         [0;32mif[0m [0mnew_retry[0m[0;34m.[0m[0mis_exhausted[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 399[0;31m             [0;32mraise[0m [0mMaxRetryError[0m[0;34m([0m[0m_pool[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0merror[0m [0;32mor[0m [0mResponseError[0m[0;34m([0m[0mcause[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    400[0m [0;34m[0m[0m

[0;31mMaxRetryError[0m: HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Max retries exceeded with url: /WaterControl/shefgraph-historic.cfm?sid=01100Q (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x11495ebe0>: Failed to establish a new connection: [Errno 61] Connection refused',))

During handling of the above exception, another exception occurred:

[0;31mConnectionError[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/models/subs.py[0m in [0;36mwith_exception[0;34m(fid, payload)[0m
[1;32m     14[0m                 [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 15[0;31m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     16[0m                         [0;32mreturn[0m [0;36m1[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mpost[0;34m(url, data, json, **kwargs)[0m
[1;32m    115[0m [0;34m[0m[0m
[0;32m--> 116[0;31m     [0;32mreturn[0m [0mrequest[0m[0;34m([0m[0;34m'post'[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m [0mjson[0m[0;34m=[0m[0mjson[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    117[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/api.py[0m in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     59[0m     [0;32mwith[0m [0msessions[0m[0;34m.[0m[0mSession[0m[0;34m([0m[0;34m)[0m [0;32mas[0m [0msession[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 60[0;31m         [0;32mreturn[0m [0msession[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m=[0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m=[0m[0murl[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     61[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36mrequest[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    532[0m         [0msend_kwargs[0m[0;34m.[0m[0mupdate[0m[0;34m([0m[0msettings[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 533[0;31m         [0mresp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mprep[0m[0;34m,[0m [0;34m**[0m[0msend_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    534[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/sessions.py[0m in [0;36msend[0;34m(self, request, **kwargs)[0m
[1;32m    645[0m         [0;31m# Send the request[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 646[0;31m         [0mr[0m [0;34m=[0m [0madapter[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mrequest[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    647[0m [0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    515[0m [0;34m[0m[0m
[0;32m--> 516[0;31m             [0;32mraise[0m [0mConnectionError[0m[0;34m([0m[0me[0m[0;34m,[0m [0mrequest[0m[0;34m=[0m[0mrequest[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    517[0m [0;34m[0m[0m

[0;31mConnectionError[0m: HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Max retries exceeded with url: /WaterControl/shefgraph-historic.cfm?sid=01100Q (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x11495ebe0>: Failed to establish a new connection: [Errno 61] Connection refused',))

During handling of the above exception, another exception occurred:

[0;31mUnboundLocalError[0m                         Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     27[0m         [0;32mif[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'01100'[0m [0;32mor[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'03045'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     28[0m                 [0mriver[0m [0;34m=[0m [0musace[0m[0;34m([0m[0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 29[0;31m                 [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     30[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     31[0m                 [0;32mif[0m [0mstation_id[0m[0;34m[[0m[0;34m:[0m[0;36m5[0m[0;34m][0m [0;34m==[0m [0;34m'FL252'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usace.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     23[0m         [0;32mdef[0m [0mbs4[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     24[0m                 [0mfid[0m[0;34m,[0m [0mpayload[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mpayload[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 25[0;31m                 [0mself[0m[0;34m.[0m[0mncout[0m [0;34m=[0m [0msubs[0m[0;34m.[0m[0mwith_exception[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mpayload[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     26[0m                 [0modata[0m[0;34m,[0m [0modate[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m,[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m     27[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/subs.py[0m in [0;36mwith_exception[0;34m(fid, payload)[0m
[1;32m     19[0m                         [0;32mreturn[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m     20[0m                 [0;32mexcept[0m [0mrequests[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mConnectionError[0m [0;32mas[0m [0merrc[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 21[0;31m                         [0mprint[0m[0;34m([0m [0;34m' Error (Connecting): {}'[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0merrt[0m[0;34m)[0m [0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     22[0m                         [0;32mreturn[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m     23[0m                 [0;32mexcept[0m [0mrequests[0m[0;34m.[0m[0mexceptions[0m[0;34m.[0m[0mHTTPError[0m [0;32mas[0m [0merrh[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mUnboundLocalError[0m: local variable 'errt' referenced before assignment
convert nc data to ascii
Wed Sep 18 10:32:52 CDT 2019
 
 
 
Thu Sep 19 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Thu Sep 19 10:32:59 CDT 2019
 
 
 
Fri Sep 20 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Fri Sep 20 10:32:58 CDT 2019
 
 
 
Sat Sep 21 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sat Sep 21 10:32:59 CDT 2019
 
 
 
Sun Sep 22 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sun Sep 22 10:32:57 CDT 2019
 
 
 
Mon Sep 23 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Mon Sep 23 10:32:58 CDT 2019
 
 
 
Tue Sep 24 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Tue Sep 24 10:32:59 CDT 2019
 
 
 
Wed Sep 25 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Wed Sep 25 10:32:58 CDT 2019
 
 
 
Thu Sep 26 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Thu Sep 26 10:33:00 CDT 2019
 
 
 
Fri Sep 27 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Fri Sep 27 10:32:57 CDT 2019
 
 
 
Sat Sep 28 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sat Sep 28 10:33:02 CDT 2019
 
 
 
Sun Sep 29 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sun Sep 29 10:32:59 CDT 2019
 
 
 
Mon Sep 30 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Mon Sep 30 10:33:00 CDT 2019
 
 
 
Tue Oct  1 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Tue Oct  1 10:32:58 CDT 2019
 
 
 
Wed Oct  2 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Wed Oct  2 10:33:03 CDT 2019
 
 
 
Thu Oct  3 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Thu Oct  3 10:33:01 CDT 2019
 
 
 
Fri Oct  4 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Fri Oct  4 10:33:01 CDT 2019
 
 
 
Sat Oct  5 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sat Oct  5 10:33:02 CDT 2019
 
 
 
Sun Oct  6 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sun Oct  6 10:33:00 CDT 2019
 
 
 
Mon Oct  7 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Mon Oct  7 10:32:59 CDT 2019
 
 
 
Tue Oct  8 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Tue Oct  8 10:33:02 CDT 2019
 
 
 
Wed Oct  9 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Wed Oct  9 10:33:02 CDT 2019
 
 
 
Thu Oct 10 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Thu Oct 10 10:32:58 CDT 2019
 
 
 
Fri Oct 11 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
 Error (Timeout): HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out. (read timeout=5)
river id: 03045atc
 Error (Timeout): HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out. (read timeout=5)
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Fri Oct 11 10:33:05 CDT 2019
 
 
 
Sat Oct 12 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
 Error (Timeout): HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out. (read timeout=5)
river id: 03045atc
 Error (Timeout): HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out. (read timeout=5)
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sat Oct 12 10:33:05 CDT 2019
 
 
 
Sun Oct 13 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
 Error (Timeout): HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out. (read timeout=5)
river id: 03045atc
 Error (Timeout): HTTPConnectionPool(host='rivergages.mvr.usace.army.mil', port=80): Read timed out. (read timeout=5)
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sun Oct 13 10:33:05 CDT 2019
 
 
 
Mon Oct 14 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Mon Oct 14 10:33:01 CDT 2019
 
 
 
Tue Oct 15 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Tue Oct 15 10:33:08 CDT 2019
 
 
 
Wed Oct 16 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Wed Oct 16 10:33:04 CDT 2019
 
 
 
Thu Oct 17 10:32:06 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Thu Oct 17 10:33:22 CDT 2019
 
 
 
Fri Oct 18 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Fri Oct 18 10:33:06 CDT 2019
 
 
 
Sat Oct 19 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sat Oct 19 10:33:00 CDT 2019
 
 
 
Sun Oct 20 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sun Oct 20 10:32:59 CDT 2019
 
 
 
Mon Oct 21 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Mon Oct 21 10:33:00 CDT 2019
 
 
 
Tue Oct 22 10:32:02 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Tue Oct 22 10:33:02 CDT 2019
 
 
 
Wed Oct 23 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Wed Oct 23 10:33:06 CDT 2019
 
 
 
Thu Oct 24 10:32:04 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Thu Oct 24 10:33:01 CDT 2019
 
 
 
Fri Oct 25 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Fri Oct 25 10:33:02 CDT 2019
 
 
 
Sat Oct 26 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sat Oct 26 10:33:02 CDT 2019
 
 
 
Sun Oct 27 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Sun Oct 27 10:33:03 CDT 2019
 
 
 
Mon Oct 28 10:32:05 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Mon Oct 28 10:33:12 CDT 2019
 
 
 
Tue Oct 29 10:32:03 CDT 2019
convert online data to nc
river id: 01100mis
river id: 03045atc
river id: 02292010
[0;31m---------------------------------------------------------------------------[0m
[0;31mFeatureNotFound[0m                           Traceback (most recent call last)
[0;32m~/dev/river/api/api_webcrawler.py[0m in [0;36m<module>[0;34m[0m
[1;32m     34[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     35[0m                         [0mriver[0m [0;34m=[0m [0musgs[0m[0;34m([0m[0mstation_id[0m[0;34m,[0m [0mbegin_date[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 36[0;31m                         [0mncout[0m[0;34m,[0m [0mncdate[0m[0;34m,[0m [0mncdata[0m [0;34m=[0m [0mriver[0m[0;34m.[0m[0mbs4[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     37[0m [0;34m[0m[0m
[1;32m     38[0m         [0;32mif[0m [0;34m([0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m)[0m [0;34m&[0m [0;34m([0m[0mlen[0m[0;34m([0m[0mncdate[0m[0;34m)[0m [0;34m>[0m [0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/dev/river/api/models/usgs.py[0m in [0;36mbs4[0;34m(self)[0m
[1;32m     29[0m                 [0;32mif[0m [0mself[0m[0;34m.[0m[0mncout[0m [0;34m!=[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m                         [0mr[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mpost[0m[0;34m([0m[0mfid[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mpayload[0m[0;34m,[0m [0mtimeout[0m[0;34m=[0m[0;36m5[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m                         [0;32mfor[0m [0mline[0m [0;32min[0m [0mBeautifulSoup[0m[0;34m([0m[0mr[0m[0;34m.[0m[0mtext[0m[0;34m,[0m[0;34m'lxml'[0m[0;34m)[0m[0;34m.[0m[0mtext[0m[0;34m.[0m[0msplitlines[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     32[0m                                 [0;32mif[0m [0mline[0m[0;34m[[0m[0;34m:[0m[0;36m4[0m[0;34m][0m [0;34m==[0m [0;34m'USGS'[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m                                         [0mcase[0m [0;34m=[0m [0mline[0m[0;34m.[0m[0msplit[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/conda/envs/nco/lib/python3.6/site-packages/bs4/__init__.py[0m in [0;36m__init__[0;34m(self, markup, features, builder, parse_only, from_encoding, exclude_encodings, **kwargs)[0m
[1;32m    194[0m                     [0;34m"Couldn't find a tree builder with the features you "[0m[0;34m[0m[0;34m[0m[0m
[1;32m    195[0m                     [0;34m"requested: %s. Do you need to install a parser library?"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 196[0;31m                     % ",".join(features))
[0m[1;32m    197[0m             [0mbuilder[0m [0;34m=[0m [0mbuilder_class[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    198[0m             if not (original_features == builder.NAME or

[0;31mFeatureNotFound[0m: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?
convert nc data to ascii
Tue Oct 29 10:33:06 CDT 2019
